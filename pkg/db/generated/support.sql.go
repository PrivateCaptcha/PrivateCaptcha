// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: support.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createSupportTicket = `-- name: CreateSupportTicket :one
INSERT INTO backend.support (category, message, user_id, session_id) VALUES ($1, $2, $3, $4) RETURNING id, category, external_id, message, session_id, resolution, user_id, created_at
`

type CreateSupportTicketParams struct {
	Category  SupportCategory `db:"category" json:"category"`
	Message   pgtype.Text     `db:"message" json:"message"`
	UserID    pgtype.Int4     `db:"user_id" json:"user_id"`
	SessionID pgtype.Text     `db:"session_id" json:"session_id"`
}

func (q *Queries) CreateSupportTicket(ctx context.Context, arg *CreateSupportTicketParams) (*Support, error) {
	row := q.db.QueryRow(ctx, createSupportTicket,
		arg.Category,
		arg.Message,
		arg.UserID,
		arg.SessionID,
	)
	var i Support
	err := row.Scan(
		&i.ID,
		&i.Category,
		&i.ExternalID,
		&i.Message,
		&i.SessionID,
		&i.Resolution,
		&i.UserID,
		&i.CreatedAt,
	)
	return &i, err
}
