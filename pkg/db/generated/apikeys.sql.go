// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: apikeys.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAPIKey = `-- name: CreateAPIKey :one
INSERT INTO apikeys (
  user_id
) VALUES (
  $1
)
RETURNING id, external_id, user_id, enabled, created_at, expires_at
`

func (q *Queries) CreateAPIKey(ctx context.Context, userID pgtype.Int4) (*APIKey, error) {
	row := q.db.QueryRow(ctx, createAPIKey, userID)
	var i APIKey
	err := row.Scan(
		&i.ID,
		&i.ExternalID,
		&i.UserID,
		&i.Enabled,
		&i.CreatedAt,
		&i.ExpiresAt,
	)
	return &i, err
}

const getAPIKeyByExternalID = `-- name: GetAPIKeyByExternalID :one
SELECT id, external_id, user_id, enabled, created_at, expires_at FROM apikeys WHERE external_id = $1
`

func (q *Queries) GetAPIKeyByExternalID(ctx context.Context, externalID pgtype.UUID) (*APIKey, error) {
	row := q.db.QueryRow(ctx, getAPIKeyByExternalID, externalID)
	var i APIKey
	err := row.Scan(
		&i.ID,
		&i.ExternalID,
		&i.UserID,
		&i.Enabled,
		&i.CreatedAt,
		&i.ExpiresAt,
	)
	return &i, err
}
