// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: organizations.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createOrganization = `-- name: CreateOrganization :one
INSERT INTO organizations (org_name, user_id) VALUES ($1, $2) RETURNING id, org_name, user_id, created_at, updated_at, deleted_at
`

type CreateOrganizationParams struct {
	OrgName string      `db:"org_name" json:"org_name"`
	UserID  pgtype.Int4 `db:"user_id" json:"user_id"`
}

func (q *Queries) CreateOrganization(ctx context.Context, arg *CreateOrganizationParams) (*Organization, error) {
	row := q.db.QueryRow(ctx, createOrganization, arg.OrgName, arg.UserID)
	var i Organization
	err := row.Scan(
		&i.ID,
		&i.OrgName,
		&i.UserID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return &i, err
}
