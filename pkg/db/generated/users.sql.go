// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: users.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUserByExternalID = `-- name: GetUserByExternalID :one
SELECT id, external_id, user_name, created_at, updated_at FROM users WHERE external_id = $1
`

func (q *Queries) GetUserByExternalID(ctx context.Context, externalID pgtype.UUID) (User, error) {
	row := q.db.QueryRow(ctx, getUserByExternalID, externalID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.ExternalID,
		&i.UserName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT id, external_id, user_name, created_at, updated_at FROM users WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.ExternalID,
		&i.UserName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
