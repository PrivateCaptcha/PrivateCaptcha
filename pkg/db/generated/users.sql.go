// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: users.sql

package generated

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  user_name
) VALUES (
  $1
)
RETURNING id, user_name, created_at, updated_at, deleted_at
`

func (q *Queries) CreateUser(ctx context.Context, userName string) (*User, error) {
	row := q.db.QueryRow(ctx, createUser, userName)
	var i User
	err := row.Scan(
		&i.ID,
		&i.UserName,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return &i, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT id, user_name, created_at, updated_at, deleted_at FROM users WHERE id = $1
`

func (q *Queries) GetUserByID(ctx context.Context, id int32) (*User, error) {
	row := q.db.QueryRow(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.UserName,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return &i, err
}
