// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateAPIKey(ctx context.Context, arg *CreateAPIKeyParams) (*APIKey, error)
	CreateCache(ctx context.Context, arg *CreateCacheParams) error
	CreateCacheMany(ctx context.Context, arg *CreateCacheManyParams) error
	CreateNotification(ctx context.Context, arg *CreateNotificationParams) (*SystemNotification, error)
	CreateOrganization(ctx context.Context, arg *CreateOrganizationParams) (*Organization, error)
	CreateProperty(ctx context.Context, arg *CreatePropertyParams) (*Property, error)
	CreateSubscription(ctx context.Context, arg *CreateSubscriptionParams) (*Subscription, error)
	CreateUser(ctx context.Context, arg *CreateUserParams) (*User, error)
	DeleteAPIKey(ctx context.Context, arg *DeleteAPIKeyParams) (*APIKey, error)
	DeleteCachedByKey(ctx context.Context, key string) error
	DeleteDeletedRecords(ctx context.Context, deletedAt pgtype.Timestamptz) error
	DeleteExpiredCache(ctx context.Context) error
	DeleteLock(ctx context.Context, name string) error
	DeleteOrganizations(ctx context.Context, dollar_1 []int32) error
	DeleteProperties(ctx context.Context, dollar_1 []int32) error
	DeleteUserAPIKeys(ctx context.Context, userID pgtype.Int4) error
	DeleteUsers(ctx context.Context, dollar_1 []int32) error
	FindUserOrgByName(ctx context.Context, arg *FindUserOrgByNameParams) (*Organization, error)
	GetAPIKeyByExternalID(ctx context.Context, externalID pgtype.UUID) (*APIKey, error)
	GetCachedByKey(ctx context.Context, key string) ([]byte, error)
	GetLastActiveNotification(ctx context.Context, arg *GetLastActiveNotificationParams) (*SystemNotification, error)
	GetNotificationById(ctx context.Context, id int32) (*SystemNotification, error)
	GetOrgProperties(ctx context.Context, orgID pgtype.Int4) ([]*Property, error)
	GetOrgPropertyByName(ctx context.Context, arg *GetOrgPropertyByNameParams) (*Property, error)
	GetOrganizationUsers(ctx context.Context, orgID int32) ([]*GetOrganizationUsersRow, error)
	GetOrganizationWithAccess(ctx context.Context, arg *GetOrganizationWithAccessParams) (*GetOrganizationWithAccessRow, error)
	GetProperties(ctx context.Context, limit int32) ([]*Property, error)
	GetPropertiesByExternalID(ctx context.Context, dollar_1 []pgtype.UUID) ([]*Property, error)
	GetPropertyByID(ctx context.Context, id int32) (*Property, error)
	GetSoftDeletedOrganizations(ctx context.Context, arg *GetSoftDeletedOrganizationsParams) ([]*GetSoftDeletedOrganizationsRow, error)
	GetSoftDeletedProperties(ctx context.Context, arg *GetSoftDeletedPropertiesParams) ([]*GetSoftDeletedPropertiesRow, error)
	GetSoftDeletedUsers(ctx context.Context, arg *GetSoftDeletedUsersParams) ([]*GetSoftDeletedUsersRow, error)
	GetSubscriptionByID(ctx context.Context, id int32) (*Subscription, error)
	GetSubscriptionsByUserIDs(ctx context.Context, dollar_1 []int32) ([]*GetSubscriptionsByUserIDsRow, error)
	GetUserAPIKeys(ctx context.Context, userID pgtype.Int4) ([]*APIKey, error)
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	GetUserByID(ctx context.Context, id int32) (*User, error)
	GetUserBySubscriptionID(ctx context.Context, subscriptionID pgtype.Int4) (*User, error)
	GetUserOrganizations(ctx context.Context, userID pgtype.Int4) ([]*GetUserOrganizationsRow, error)
	GetUserPropertiesCount(ctx context.Context, orgOwnerID pgtype.Int4) (int64, error)
	GetUsersWithoutSubscription(ctx context.Context, dollar_1 []int32) ([]*User, error)
	InsertLock(ctx context.Context, arg *InsertLockParams) (*Lock, error)
	InviteUserToOrg(ctx context.Context, arg *InviteUserToOrgParams) (*OrganizationUser, error)
	Ping(ctx context.Context) (int32, error)
	RemoveUserFromOrg(ctx context.Context, arg *RemoveUserFromOrgParams) error
	SoftDeleteProperty(ctx context.Context, id int32) (*Property, error)
	SoftDeleteUser(ctx context.Context, id int32) (*User, error)
	SoftDeleteUserOrganization(ctx context.Context, arg *SoftDeleteUserOrganizationParams) error
	SoftDeleteUserOrganizations(ctx context.Context, userID pgtype.Int4) error
	UpdateAPIKey(ctx context.Context, arg *UpdateAPIKeyParams) (*APIKey, error)
	UpdateCacheExpiration(ctx context.Context, arg *UpdateCacheExpirationParams) error
	UpdateOrgMembershipLevel(ctx context.Context, arg *UpdateOrgMembershipLevelParams) error
	UpdateOrganization(ctx context.Context, arg *UpdateOrganizationParams) (*Organization, error)
	UpdateProperty(ctx context.Context, arg *UpdatePropertyParams) (*Property, error)
	UpdateSubscription(ctx context.Context, arg *UpdateSubscriptionParams) (*Subscription, error)
	UpdateUserAPIKeysRateLimits(ctx context.Context, arg *UpdateUserAPIKeysRateLimitsParams) error
	UpdateUserData(ctx context.Context, arg *UpdateUserDataParams) (*User, error)
	UpdateUserSubscription(ctx context.Context, arg *UpdateUserSubscriptionParams) (*User, error)
}

var _ Querier = (*Queries)(nil)
