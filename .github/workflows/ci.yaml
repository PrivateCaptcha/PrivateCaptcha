name: CI

on:
  push:
    branches:
    - '**'
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - '**/.*.yml'
    - '.vscode/**'
    - '.devcontainer/**'
    - 'docker-compose.yml'
    - 'Dockerfile'
    tags-ignore:
    - '*'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    # Service containers to run with `build`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: privatecaptcha
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.0

    - uses: actions/checkout@v4

    ###############
    ## Build web ##
    ###############
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install NPM dependencies
      run: npm ci
      working-directory: ./web

    - name: Build web
      run: make build-js

    ##############
    ## Build Go ##
    ##############
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build server
      run: make build-server

    - name: Unit Tests
      run: make test-unit

    - name: Run clickhouse
      run: ./docker/run-clickhouse.sh

    - name: Build tests
      run: make build-tests

    - name: Migrate Databases
      env:
        PC_POSTGRES: postgres://postgres:postgres@localhost:5432/privatecaptcha?sslmode=disable&search_path=public
        PC_CLICKHOUSE_HOST: localhost
        PC_CLICKHOUSE_DB: privatecaptcha
        PC_CLICKHOUSE_USER: default
      run: ./bin/server -mode migrate

    - name: Set up sqlc
      uses: sqlc-dev/setup-sqlc@v4
      with:
        sqlc-version: '1.27.0'

    - name: Vet Postgres queries
      env:
        PC_POSTGRES: postgres://captchasrv:QMS0fJmTHS8Gzq@localhost:5432/privatecaptcha?sslmode=disable&search_path=backend
      run: make vet-sqlc

    - name: Integration Tests
      env:
        PC_POSTGRES: postgres://captchasrv:QMS0fJmTHS8Gzq@localhost:5432/privatecaptcha?sslmode=disable&search_path=backend
        PC_CLICKHOUSE_HOST: localhost
        PC_CLICKHOUSE_DB: privatecaptcha
        PC_CLICKHOUSE_USER: default
        UA_KEY: ea3ad6863f0ba598c01bb561eda18c24fa72b75629baed833fb92a7fde29a5dd3ce1cbd466e5c0a2762034b43127bb11a4dd86f1c8ea3c24ea70da21f5b2201c
        RATE_LIMIT_HEADER: X-REAL-IP
      run: ./docker/run-tests.sh

    - uses: actions/upload-artifact@master
      with:
        name: privatecaptcha
        path: bin/server

  deploy:
    name: Deploy captcha binary
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/download-artifact@master
        with:
          name: privatecaptcha
          path: bin

      - name: Display downloaded files
        run: ls -R bin

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Copy files to S3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          aws s3 cp --endpoint-url=${{ secrets.AWS_ENDPOINT_URL }} bin/server s3://${{ secrets.RELEASE_BUCKET_NAME }}/${{ steps.extract_branch.outputs.branch }}/binary/server
