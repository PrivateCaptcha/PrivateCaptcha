name: CI

on:
  push:
    branches:
    - '**'
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - '**/.*.yml'
    - '.vscode/**'
    - '.devcontainer/**'
    - 'docker-compose.yml'
    - 'Dockerfile'
    tags-ignore:
    - '*'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    # Service containers to run with `build`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: privatecaptcha
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.0

    - uses: actions/checkout@v4

    ###############
    ## Build web ##
    ###############
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install NPM dependencies
      run: npm ci
      working-directory: ./web

    - name: Build web
      run: make build-js

    ##############
    ## Build Go ##
    ##############
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build server
      run: make build-server

    - name: Unit Tests
      run: make test-unit

    - name: Run clickhouse
      run: ./docker/run-clickhouse.sh

    - name: Integration Tests
      run: make test-integration
      env:
        PC_POSTGRES: postgres://postgres:postgres@localhost:5432/privatecaptcha?sslmode=disable
        PC_CLICKHOUSE_HOST: localhost
        PC_CLICKHOUSE_DB: privatecaptcha
        PC_CLICKHOUSE_USER: default
